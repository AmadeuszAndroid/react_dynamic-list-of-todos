{"version":3,"sources":["types/FilterMode.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterMode","TodoInfo","todo","id","title","completed","onClick","detailsButtonClassNames","todoStatusClass","classNames","className","type","TodoList","todos","clickedTodoId","map","todoId","buttonClassName","TodoFilter","getTodos","useState","all","filterMode","setFilterMode","query","setQuery","onChange","event","mode","target","value","placeholder","inputQuery","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectedTodo","userId","undefined","user","setUser","todoStatusText","useEffect","getUser","href","email","name","fetchedTodos","App","displayedTodos","setDisplayedTodos","isLoading","setIsLoading","setSelectedTodo","extracted","active","filter","toLowerCase","includes","trim","toLocaleLowerCase","clickedTodo","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cd467917.chunk.js","sourcesContent":["export enum FilterMode {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype TodoInfoProps = {\n  todo: Todo\n  onClick: (todoId: number) => void\n  detailsButtonClassNames: string\n};\n\nexport const TodoInfo = (\n  {\n    todo: {\n      id,\n      title,\n      completed,\n    },\n    onClick,\n    detailsButtonClassNames,\n  }: TodoInfoProps,\n) => {\n  const todoStatusClass = classNames(`has-text-${completed ? 'success' : 'danger'}`);\n\n  return (\n    <tr data-cy=\"todo\">\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={todoStatusClass}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => onClick(id)}\n        >\n          <span className=\"icon\">\n            <i className={detailsButtonClassNames} />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoListProps = {\n  todos: Todo[]\n  onClick: (todoId: number) => void\n  clickedTodoId: number\n};\n\nexport const TodoList = (\n  { todos, onClick, clickedTodoId }: TodoListProps,\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const todoId = todo.id;\n        const buttonClassName = classNames(\n          'far',\n          `fa-eye${todoId === clickedTodoId ? '-slash' : ''}`,\n        );\n\n        return (\n          <TodoInfo\n            key={todoId}\n            todo={todo}\n            onClick={onClick}\n            detailsButtonClassNames={buttonClassName}\n          />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import { ChangeEvent, useState } from 'react';\nimport { FilterMode } from '../../types/FilterMode';\n\ntype TodoFilterProps = {\n  getTodos: (mode: FilterMode, query: string) => void\n};\n\nexport const TodoFilter = ({ getTodos }: TodoFilterProps) => {\n  const [filterMode, setFilterMode] = useState(FilterMode.all);\n  const [query, setQuery] = useState('');\n\n  const handleChangeSelect = (event: ChangeEvent<HTMLSelectElement>) => {\n    const mode = event.target.value as FilterMode;\n\n    setFilterMode(mode);\n    getTodos(mode, query);\n  };\n\n  const handleChangeInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const inputQuery = event.target.value;\n\n    setQuery(inputQuery);\n    getTodos(filterMode, inputQuery);\n  };\n\n  const handleClick = () => {\n    setQuery('');\n    getTodos(filterMode, '');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleChangeSelect}\n            value={filterMode}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleChangeInput}\n          value={query}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query !== '' && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClick}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\n\ntype TodoModalProps = {\n  selectedTodo: Todo\n  onClick: () => void\n};\n\nexport const TodoModal = (\n  {\n    selectedTodo: {\n      id, title, completed, userId,\n    }, onClick,\n  }: TodoModalProps,\n) => {\n  const [user, setUser] = useState<User | undefined>(undefined);\n\n  const todoStatusClass = `has-text-${completed ? 'success' : 'danger'}`;\n  const todoStatusText = completed ? 'Done' : 'Planned';\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {user ? (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClick}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={todoStatusClass}>{todoStatusText}</strong>\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterMode } from './types/FilterMode';\nimport { getTodos } from './api';\n\nlet fetchedTodos: Todo[] = [];\n\nexport const App: React.FC = () => {\n  const [displayedTodos, setDisplayedTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const displayTodos = (mode: FilterMode, query: string) => {\n    let todos = fetchedTodos;\n\n    switch (mode) {\n      case FilterMode.active:\n        todos = todos.filter(todo => !todo.completed);\n        break;\n      case FilterMode.completed:\n        todos = todos.filter(todo => todo.completed);\n        break;\n      default:\n        break;\n    }\n\n    if (query !== '') {\n      todos = todos.filter(\n        todo => todo.title.toLowerCase().includes(query.trim().toLocaleLowerCase()),\n      );\n    }\n\n    setDisplayedTodos(todos);\n  };\n\n  const handleTodoListClick = (todoId: number) => {\n    const clickedTodo = displayedTodos.find(todo => todo.id === todoId);\n\n    if (clickedTodo) {\n      setSelectedTodo(clickedTodo);\n    }\n  };\n\n  const handleClickTodoModal = () => {\n    setSelectedTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then(extracted => {\n        fetchedTodos = extracted;\n        setDisplayedTodos(fetchedTodos);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter getTodos={displayTodos} />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? <Loader /> : (\n                <TodoList\n                  todos={displayedTodos}\n                  onClick={handleTodoListClick}\n                  clickedTodoId={selectedTodo?.id || 0}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onClick={handleClickTodoModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}